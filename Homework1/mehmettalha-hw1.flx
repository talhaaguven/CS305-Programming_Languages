%{
    #include <stdio.h>
    int lineNumber = 1;
    int inComment = 0;
%}

%option noyywrap

tIDENT [a-zA-Z_][a-zA-Z0-9_]*
tSTRING \"([^"]*)\"
tADDRESS [a-zA-Z0-9_\-]+([\.][a-zA-Z0-9_\-]+)*@[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])*([\.][a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])*){1,2}
tDATE [0-9]+[/.-][0-9]+[/.-][0-9]+ 
tTIME [0-9]{2}:[0-9]{2}



tCOMMA ","
tLPR "("
tLBR "["
tAT "@"
tCOLON ":"
tRPR ")"
tRBR "]"

tMAIL "Mail"
tENDMAIL "end Mail"
tSEND "send"
tFROM "from"
tSCHEDULE "schedule"
tENDSCHEDULE "end schedule"
tTO "to"
tSET "set"



%%

"//".*   ;
\n {lineNumber++;}

" "        {}
{tCOMMA}  printf("%d_tCOMMA\n", lineNumber);
{tLPR}    printf("%d_tLPR\n", lineNumber);
{tLBR}    printf("%d_tLBR\n", lineNumber);
{tAT}     printf("%d_tAT\n", lineNumber);
{tCOLON}  printf("%d_tCOLON\n", lineNumber); 
{tRPR}    printf("%d_tRPR\n", lineNumber);
{tRBR}    printf("%d_tRBR\n", lineNumber);

{tMAIL}        printf("%d_tMAIL\n", lineNumber);
{tENDMAIL}     printf("%d_tENDMAIL\n", lineNumber);
{tSEND}        printf("%d_tSEND\n", lineNumber);
{tFROM}        printf("%d_tFROM\n", lineNumber);
{tSCHEDULE}    printf("%d_tSCHEDULE\n", lineNumber);
{tENDSCHEDULE} printf("%d_tENDSCHEDULE\n", lineNumber);
{tTO}          printf("%d_tTO\n", lineNumber);
{tSET}         printf("%d_tSET\n", lineNumber);

{tIDENT}        printf("%d_tIDENT_(%s)\n", lineNumber, yytext); 
{tSTRING} {
    char* stripped_string = yytext + 1;  
    stripped_string[strlen(stripped_string) - 1] = '\0'; 
    printf("%d_tSTRING_(%s)\n", lineNumber, stripped_string);
    char* ptr = stripped_string;
    while (*ptr) {
        if (*ptr == '\n') {
            lineNumber++;
        }
        ptr++;
    }
}
{tADDRESS}      printf("%d_tADDRESS_(%s)\n", lineNumber, yytext); 
{tTIME} {
    int hours = (yytext[0] - '0') * 10 + (yytext[1] - '0');
    int minutes = (yytext[3] - '0') * 10 + (yytext[4] - '0');

    printf("%d_tTIME_(Hour_%02d_Minute_%02d)\n", lineNumber, hours, minutes);}


{tDATE} {
    char day[3], month[3], year[5];
    int i = 0;

    if (yytext[2] == '/' || yytext[2] == '-' || yytext[2] == '.') {
        day[0] = yytext[0];
        day[1] = yytext[1];
        day[2] = '\0';

        month[0] = yytext[3];
        month[1] = yytext[4];
        month[2] = '\0';

        for (i = 6; i < 10; i++) {
            if (yytext[i] >= '0' && yytext[i] <= '9') {
                year[i - 6] = yytext[i];
            } else {
                break;
            }
        }
        year[i - 6] = '\0';

        printf("%d_tDATE_(Day_%s_Month_%s_Year_%s)\n", lineNumber, day, month, year);
    }
}


.           printf("%d ILLEGAL CHARACTER (%s)\n", lineNumber, yytext);




%%

main(){
  yylex();
  return 0;
}